//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SCGL.BAL;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using SW.SW_Common;
using SQLHelper;

namespace SCGL.DAL
{
    
    
    public class DAL_InvoiceDutiesDesc
    {
        
        #region ConnectionStringuctor
        public DAL_InvoiceDutiesDesc()
        {
        }
        #endregion
        
        #region Public Method
        // =========================== Public Method =========================
        public virtual int Create(InvoiceDutiesDesc p)
        {
            try
            {
                SqlParameter[] SqlParam = new SqlParameter[] {
                        new SqlParameter("InvoiceDutiesDescription", p.InvoiceDutiesDescription),
                        new SqlParameter("CreatedDate", p.CreatedDate)};
                return Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDesc_Insert", SqlParam));
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual InvoiceDutiesDesc Read(int p)
        {
            try
            {
                SqlParameter SqlParam = new SqlParameter("InvoiceDutiesDescID", p);
                InvoiceDutiesDesc obj = new InvoiceDutiesDesc();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDesc_Read", SqlParam))
                {
                obj = DataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        
        public virtual DataTable ReadDataTable()
        {
            try
            {
                return SqlHelper.ExecuteDataset(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDesc_Read").Tables[0];
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual List<InvoiceDutiesDesc> Read()
        {
            try
            {
                List<InvoiceDutiesDesc> obj = new List<InvoiceDutiesDesc>();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDesc_Read"))
                {
                obj = ListDataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual bool Update(InvoiceDutiesDesc p)
        {
            try
            {
                SqlParameter[] SqlParam = new SqlParameter[] {
                        new SqlParameter("InvoiceDutiesDescID", p.InvoiceDutiesDescID),
                        new SqlParameter("InvoiceDutiesDescription", p.InvoiceDutiesDescription)};
                int i = SqlHelper.ExecuteNonQuery(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDesc_Update", SqlParam);
                return i >= 1;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        
        public virtual bool Delete(int p)
        {
            try
            {
                SqlParameter SqlParam = new SqlParameter("InvoiceDutiesDescID", p);
                int i = SqlHelper.ExecuteNonQuery(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDesc_Delete", SqlParam);
                return i >= 1;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion
        
        #region Helper Method
        // =========================== Helper Method =========================
        private InvoiceDutiesDesc DataReader(SqlDataReader dr)
        {
            InvoiceDutiesDesc obj = new InvoiceDutiesDesc();
            try
            {
                if (dr.Read())
                {
                    obj.InvoiceDutiesDescID = SCGL_Common.CheckInt(dr["InvoiceDutiesDescID"]);
                    obj.InvoiceDutiesDescription = SCGL_Common.CheckString(dr["InvoiceDutiesDescription"]);
                    obj.CreatedDate = SCGL_Common.CheckDateTime(dr["CreatedDate"]);
                    obj.IsInvoiceDutiesDescExist = SCGL_Common.CheckBoolean(dr["IsInvoiceDutiesDescExist"]);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return obj;
        }

        private List<InvoiceDutiesDesc> ListDataReader(SqlDataReader dr)
        {
            List<InvoiceDutiesDesc> objList = new List<InvoiceDutiesDesc>();
            try
            {
               while(dr.Read())
               {
                   InvoiceDutiesDesc obj = new InvoiceDutiesDesc();
                   obj.InvoiceDutiesDescID = SCGL_Common.CheckInt(dr["InvoiceDutiesDescID"]);
                   obj.InvoiceDutiesDescription = SCGL_Common.CheckString(dr["InvoiceDutiesDescription"]);
                obj.CreatedDate = SCGL_Common.CheckDateTime(dr["CreatedDate"]);
                obj.IsInvoiceDutiesDescExist = SCGL_Common.CheckBoolean(dr["IsInvoiceDutiesDescExist"]);
                objList.Add(obj);
               }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return objList;
        }
        #endregion
    }
}
