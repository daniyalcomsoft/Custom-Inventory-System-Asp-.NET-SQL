//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using SCGL.BAL;
using SW.SW_Common;
using SCGL.BAL;
using SQLHelper;

namespace SCGL.DAL
{
    
    
    public class DAL_InvoiceDutiesDetail
    {
        
        #region Constructor
        public DAL_InvoiceDutiesDetail()
        {
        }
        #endregion
        
        #region Public Method
        // =========================== Public Method =========================
        public virtual int Create(InvoiceDutiesDetail p)
        {
            try
            {
                SqlParameter[] SqlParam = new SqlParameter[] {
                        new SqlParameter("InvoiceID", p.InvoiceID),
                        new SqlParameter("InvoiceDutiesDescID", p.InvoiceDutiesDescID),
                        new SqlParameter("Number", p.DutiesNumber),
                        new SqlParameter("Remarks", p.DutiesRemarks),
                        new SqlParameter("Date", p.DutiesDate),
                        new SqlParameter("ByParty", p.DutiesByParty),
                        new SqlParameter("ByUS", p.DutiesByUS)};
                return Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDetail_Insert", SqlParam));
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual InvoiceDutiesDetail Read(int p)
        {
            try
            {
                SqlParameter SqlParam = new SqlParameter("InvoiceDutiesDetailID", p);
                InvoiceDutiesDetail obj = new InvoiceDutiesDetail();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDetail_Read", SqlParam))
                {
                obj = DataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        
        public virtual DataTable ReadDataTable()
        {
            try
            {
                return SqlHelper.ExecuteDataset(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDetail_Read").Tables[0];
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual List<InvoiceDutiesDetail> Read()
        {
            try
            {
                List<InvoiceDutiesDetail> obj = new List<InvoiceDutiesDetail>();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDetail_Read"))
                {
                obj = ListDataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual List<InvoiceDutiesDetail> ReadByInvoiceID(int InvoiceID)
        {
            try
            {
                SqlParameter p = new SqlParameter("InvoiceID", InvoiceID);
                string query = "SELECT * FROM vt_SCGL_InvoiceDutiesDetail WHERE InvoiceID = @InvoiceID";
                List<InvoiceDutiesDetail> obj = new List<InvoiceDutiesDetail>();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, CommandType.Text, query, p))
                {
                    obj = ListDataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual bool Update(InvoiceDutiesDetail p)
        {
            try
            {
                SqlParameter[] SqlParam = new SqlParameter[] {
                        new SqlParameter("InvoiceDutiesDetailID", p.InvoiceDutiesDetailID),
                        new SqlParameter("InvoiceID", p.InvoiceID),
                        new SqlParameter("InvoiceDutiesDescID", p.InvoiceDutiesDescID),
                        new SqlParameter("Number", p.DutiesNumber),
                        new SqlParameter("Remarks", p.DutiesRemarks),
                        new SqlParameter("Date", p.DutiesDate),
                        new SqlParameter("ByParty", p.DutiesByParty),
                        new SqlParameter("ByUS", p.DutiesByUS)};
                int i = SqlHelper.ExecuteNonQuery(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDetail_Update", SqlParam);
                return i >= 1;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        
        public virtual bool Delete(int p)
        {
            try
            {
                SqlParameter SqlParam = new SqlParameter("InvoiceDutiesDetailID", p);
                int i = SqlHelper.ExecuteNonQuery(ConnectionString.PSMS, "VT_SP_InvoiceDutiesDetail_Delete", SqlParam);
                return i >= 1;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion
        
        #region Helper Method
        // =========================== Helper Method =========================
        private InvoiceDutiesDetail DataReader(SqlDataReader dr)
        {
            InvoiceDutiesDetail obj = new InvoiceDutiesDetail();
            try
            {
                if (dr.Read())
                {
                    obj.InvoiceDutiesDetailID = SCGL_Common.CheckInt(dr["InvoiceDutiesDetailID"]);
                    obj.InvoiceID = SCGL_Common.CheckInt(dr["InvoiceID"]);
                    obj.InvoiceDutiesDescID = SCGL_Common.CheckInt(dr["InvoiceDutiesDescID"]);
                    obj.DutiesNumber = SCGL_Common.CheckString(dr["DutiesNumber"]);
                    obj.DutiesRemarks = SCGL_Common.CheckString(dr["DutiesRemarks"]);
                    obj.DutiesDate = SCGL_Common.CheckString(dr["DutiesDate"]);
                    obj.DutiesByParty = SCGL_Common.Convert_ToDecimal(dr["DutiesByParty"]);
                    obj.DutiesByUS = SCGL_Common.Convert_ToDecimal(dr["DutiesByUS"]);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return obj;
        }

        private List<InvoiceDutiesDetail> ListDataReader(SqlDataReader dr)
        {
            List<InvoiceDutiesDetail> objList = new List<InvoiceDutiesDetail>();
            try
            {
               while(dr.Read())
               {
                   InvoiceDutiesDetail obj = new InvoiceDutiesDetail();
                   obj.InvoiceDutiesDetailID = SCGL_Common.CheckInt(dr["InvoiceDutiesDetailID"]);
                obj.InvoiceID = SCGL_Common.CheckInt(dr["InvoiceID"]);
                obj.InvoiceDutiesDescID = SCGL_Common.CheckInt(dr["InvoiceDutiesDescID"]);
                obj.DutiesNumber = SCGL_Common.CheckString(dr["DutiesNumber"]);
                obj.DutiesRemarks = SCGL_Common.CheckString(dr["DutiesRemarks"]);
                obj.DutiesDate = SCGL_Common.CheckString(dr["DutiesDate"]);
                obj.DutiesByParty = SCGL_Common.Convert_ToDecimal(dr["DutiesByParty"]);
                obj.DutiesByUS = SCGL_Common.Convert_ToDecimal(dr["DutiesByUS"]);
                objList.Add(obj);
               }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return objList;
        }
        #endregion
    }
}
