//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SCGL.BAL;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using SW.SW_Common;
using SQLHelper;

namespace SCGL.DAL
{


    public class ShippingLine_DAL
    {

        #region ConnectionStringuctor
        public ShippingLine_DAL()
        {
        }
        #endregion

        #region Public Method
        // =========================== Public Method =========================
        public virtual int Create(ShippingLine_BAL p,SqlTransaction trans)
        {
            try
            {
                SqlParameter[] SqlParam = new SqlParameter[] {
                        new SqlParameter("ShippingLine", p.ShippingLine),
                        new SqlParameter("CreatedDate", p.CreatedDate)};
                return Convert.ToInt32(SqlHelper.ExecuteScalar(trans, "SP_ShippingLineInsert", SqlParam));
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual ShippingLine_BAL Read(int p)
        {
            try
            {
                SqlParameter SqlParam = new SqlParameter("ShippingLineID", p);
                ShippingLine_BAL obj = new ShippingLine_BAL();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, "SP_ShippingLineRead", SqlParam))
                {
                    obj = DataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual DataTable ReadDataTable()
        {
            try
            {
                return SqlHelper.ExecuteDataset(ConnectionString.PSMS, "SP_ShippingLine_Read").Tables[0];
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual List<ShippingLine_BAL> Read()
        {
            try
            {
                List<ShippingLine_BAL> obj = new List<ShippingLine_BAL>();
                using (SqlDataReader dr = SqlHelper.ExecuteReader(ConnectionString.PSMS, "SP_ShippingLineReads"))
                {
                    obj = ListDataReader(dr);
                }
                return obj;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual bool Update(ShippingLine_BAL p)
        {
            try
            {
                SqlParameter[] SqlParam = new SqlParameter[] {
                        new SqlParameter("ShippingLineID", p.ShippingLineID),
                        new SqlParameter("ShippingLine", p.ShippingLine)};
                int i = SqlHelper.ExecuteNonQuery(ConnectionString.PSMS, "SP_ShippingLine_Update", SqlParam);
                return i >= 1;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public virtual bool Delete(int p)
        {
            try
            {
                SqlParameter SqlParam = new SqlParameter("ShippingLineID", p);
                int i = SqlHelper.ExecuteNonQuery(ConnectionString.PSMS, "SP_ShippingLine_Delete", SqlParam);
                return i >= 1;
                
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Helper Method
        // =========================== Helper Method =========================
        private ShippingLine_BAL DataReader(SqlDataReader dr)
        {
            ShippingLine_BAL obj = new ShippingLine_BAL();
            try
            {
                if (dr.Read())
                {
                    obj.ShippingLineID = SCGL_Common.CheckInt(dr["ShippingLineID"]);
                    obj.ShippingLine = SCGL_Common.CheckString(dr["ShippingLine"]);
                    obj.CreatedDate = SCGL_Common.CheckDateTime(dr["CreatedDate"]);
                    obj.IsShippingExist = SCGL_Common.CheckBoolean(dr["IsShippingExist"]);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return obj;
        }

        private List<ShippingLine_BAL> ListDataReader(SqlDataReader dr)
        {
            List<ShippingLine_BAL> objList = new List<ShippingLine_BAL>();
            try
            {
                while (dr.Read())
                {
                    ShippingLine_BAL obj = new ShippingLine_BAL();
                    obj.ShippingLineID = SCGL_Common.CheckInt(dr["ShippingLineID"]);
                    obj.ShippingLine = SCGL_Common.CheckString(dr["ShippingLine"]);
                    obj.CreatedDate = SCGL_Common.CheckDateTime(dr["CreatedDate"]);
                    obj.IsShippingExist = SCGL_Common.CheckBoolean(dr["IsShippingExist"]);
                    objList.Add(obj);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return objList;
        }
        #endregion
    }
}
